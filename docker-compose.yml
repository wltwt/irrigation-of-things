services:
  dev:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - .:/workspace:cached
    command: sleep infinity
    depends_on:
      - mosquitto
      - postgres
      - influxdb
    env_file:
      - .env
    networks:
      - backend

  telegraf:
    image: telegraf
    restart: always
    volumes:
      - ./telegraf/:/etc/telegraf/:ro
      - ./logs/telegraf:/var/log/telegraf
    depends_on:
      - mosquitto
      - influxdb
    env_file:
      - .env
    networks:
      - backend

  mosquitto:
    image: eclipse-mosquitto
    volumes:
      - ./mosquitto:/mosquitto
    ports:
      - "1883:1883"
    networks:
      - backend

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - backend

  influxdb:
    image: influxdb:2.7-alpine
    restart: unless-stopped
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET}
      DOCKER_INFLUXDB_INIT_RETENTION: ${INFLUXDB_RETENTION}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_TOKEN}
      TZ: Europe/Oslo
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    networks:
      - backend


volumes:
  postgres-data:
  influxdb-data:

networks:
  backend:
